import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

public class GuessNumber extends JFrame {
    public GuessNumber() {
        setTitle("My GuessNumber");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setVisible(true);

    }


    private JTextField textField1;
    private JTextField inputYuorNumberTextField;
    private JTextField amIRightTextField;
    private JTextField continueTextField;
    private JButton YESButton;
    private JButton NOButton;

    public static void main(String[] args) {
        new GuessNumber();

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
        textField1 = new JTextField();
        panel1.add(textField1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        inputYuorNumberTextField = new JTextField();
        Font inputYuorNumberTextFieldFont = this.$$$getFont$$$(null, -1, 14, inputYuorNumberTextField.getFont());
        if (inputYuorNumberTextFieldFont != null) inputYuorNumberTextField.setFont(inputYuorNumberTextFieldFont);
        inputYuorNumberTextField.setHorizontalAlignment(0);
        inputYuorNumberTextField.setText("Input yuor number");
        panel1.add(inputYuorNumberTextField, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setFocusCycleRoot(true);
        Font label1Font = this.$$$getFont$$$(null, -1, 22, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(0);
        label1.setText("Label");
        panel1.add(label1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(120, 30), new Dimension(150, 30), 0, false));
        amIRightTextField = new JTextField();
        Font amIRightTextFieldFont = this.$$$getFont$$$(null, -1, 18, amIRightTextField.getFont());
        if (amIRightTextFieldFont != null) amIRightTextField.setFont(amIRightTextFieldFont);
        amIRightTextField.setHorizontalAlignment(0);
        amIRightTextField.setText("Am I right?");
        panel1.add(amIRightTextField, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(170, 151), null, 0, false));
        continueTextField = new JTextField();
        Font continueTextFieldFont = this.$$$getFont$$$("Arial Narrow", Font.BOLD, 12, continueTextField.getFont());
        if (continueTextFieldFont != null) continueTextField.setFont(continueTextFieldFont);
        continueTextField.setHorizontalAlignment(0);
        continueTextField.setRequestFocusEnabled(true);
        continueTextField.setScrollOffset(0);
        continueTextField.setText("Continue?");
        continueTextField.setVerifyInputWhenFocusTarget(true);
        continueTextField.setVisible(true);
        panel2.add(continueTextField, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(170, 95), new Dimension(200, 40), 0, false));
        YESButton = new JButton();
        Font YESButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, YESButton.getFont());
        if (YESButtonFont != null) YESButton.setFont(YESButtonFont);
        YESButton.setText("YES");
        panel2.add(YESButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        NOButton = new JButton();
        Font NOButtonFont = this.$$$getFont$$$(null, Font.BOLD, 14, NOButton.getFont());
        if (NOButtonFont != null) NOButton.setFont(NOButtonFont);
        NOButton.setText("NO");
        panel2.add(NOButton, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

}
